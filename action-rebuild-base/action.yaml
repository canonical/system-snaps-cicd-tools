name: 'RebuildBase'
description: 'Rebuild a base snap and publish to the edge channel on changes'
author: 'Alfonso Sanchez-Beato'

inputs:
  architectures:
    description: Comma separated list of architectures to override the default
    required: false
    type: string
    default: ""
  snapcraft_channel:
    description: Snapcraft snap installation channel
    required: false
    type: string
    default: ""
  branch:
    description: Branch to release from
    required: false
    type: string
    default: "${{ github.ref_name }}"
  fips:
    description: Whether this is a FIPS build variant
    required: false
    type: boolean
    default: false

runs:
  using: "composite"
  steps:
    - name: Cleanup job workspace
      shell: bash
      run: |
          rm -rf "${{ github.workspace }}"
          mkdir "${{ github.workspace }}"
    - name: Checking out
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
        # We need the full history and tags to create the changelog
        fetch-depth: 0
    - name: Checking out CICD scripts
      uses: actions/checkout@v4
      with:
        repository: snapcore/system-snaps-cicd-tools
        ref: main
        path: cicd
    - name: Release
      shell: bash
      env:
        BUILD_ARCHITECTURES: ${{ inputs.architectures }}
        SNAPCRAFT_CHANNEL: ${{ inputs.snapcraft_channel }}
      run: |
        set -x
        printf "Releasing from %s\n" branch "${{ inputs.branch }}"
        sudo DEBIAN_FRONTEND=noninteractive apt-get install yq -yqq
        snap_name=$(yq -r .name snapcraft.yaml)
        if [ "$snap_name" = core ]; then
            series=''
        else
            series=${snap_name#core}
        fi

        IS_FIPS=""
        if [ "${{ inputs.fips }}" = true ]; then
          IS_FIPS="--fips"
        fi

        ./cicd/workflows/build-base-on-changes.py --output-dir="${{ runner.temp }}" --debug "$series" $IS_FIPS

        # TODO run spread tests on built snaps before publishing

        shopt -s nullglob
        SNAP_NAME=
        for s in "${{ runner.temp }}"/*_*.snap; do
            s=${s##*/}
            SNAP_NAME=${s%%_*}
            break
        done
        shopt -u nullglob
        if [ -z "$SNAP_NAME" ]; then
            printf "No build has been triggered\n"
        fi
        echo "SNAP_NAME=$SNAP_NAME" >> $GITHUB_ENV
    - name: Upload artifacts
      if: ${{ env.SNAP_NAME != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.SNAP_NAME }}-snaps
        path: ${{ runner.temp }}/${{ env.SNAP_NAME }}_*.snap
    - name: Publish the snaps to edge channel
      if: ${{ env.SNAP_NAME != '' }}
      shell: bash
      run: |
        ./cicd/workflows/snap-publish.sh "${{ runner.temp }}" \
            ${{ env.SNAP_NAME }} latest/edge
